<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.90"/>
    <errors>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/src/MG996R.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/HAL.hpp" line="102" column="2"/>
            <symbol>HAL_ESP32</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;MG996R&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;MG996R&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/src/MG996R.cpp" file="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/include/MG996R.hpp" line="107" column="2"/>
            <symbol>MG996R</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_PWM_API&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_PWM_API&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/src/MG996R.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/PWM_API_ESP32.hpp" line="108" column="2"/>
            <symbol>friend_PWM_API</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_MG996R&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_MG996R&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/src/MG996R.cpp" file="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/include/MG996R.hpp" line="149" column="2"/>
            <symbol>friend_MG996R</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_ConnectedComponents&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_ConnectedComponents&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/src/Background_Extractor.cpp" file="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/include/ConnectedComponents.hpp" line="105" column="2"/>
            <symbol>friend_ConnectedComponents</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_Load_Image&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_Load_Image&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/src/Background_Extractor.cpp" file="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/include/Utility_Image.hpp" line="120" column="2"/>
            <symbol>friend_Load_Image</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_Background_Extractor&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_Background_Extractor&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/src/Background_Extractor.cpp" file="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/include/Background_Extractor.hpp" line="123" column="2"/>
            <symbol>friend_Background_Extractor</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_ConnectedComponents&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_ConnectedComponents&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/src/ConnectedComponents.cpp" file="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/include/ConnectedComponents.hpp" line="105" column="2"/>
            <symbol>friend_ConnectedComponents</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_Load_Image&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_Load_Image&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/src/Utility_Image.cpp" file="/home/nikolaj/github/Embedded/library/Components/AnalysisTools/ImageAnalysis_OpenCV/include/Utility_Image.hpp" line="120" column="2"/>
            <symbol>friend_Load_Image</symbol>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFi.cpp" line="788" column="3"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFi.cpp" line="256" column="16"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: ipAddrStr" verbose="Unused variable: ipAddrStr" cwe="563">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFi.cpp" line="231" column="7"/>
            <symbol>ipAddrStr</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ip&apos; is assigned a value that is never used." verbose="Variable &apos;ip&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFi.cpp" line="788" column="6"/>
            <symbol>ip</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFiEventHandler.cpp" line="32" column="40"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFiEventHandler.cpp" line="82" column="4"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;err!=GE_OK&apos; is always false" verbose="Condition &apos;err!=GE_OK&apos; is always false" cwe="570">
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFi_API.cpp" line="41" column="9" info="Condition &apos;err!=GE_OK&apos; is always false"/>
            <location file="/home/nikolaj/github/Embedded/library/Components/Connector/WiFi/src/WiFi_API.cpp" line="40" column="20" info="Assignment &apos;err=connect()&apos;, assigned value is 0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;DistanceSensorController&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;DistanceSensorController&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Controller/DistanceSensorController/src/DistanceSensorController.cpp" file="/home/nikolaj/github/Embedded/library/Components/Controller/DistanceSensorController/include/DistanceSensorController.hpp" line="60" column="2"/>
            <symbol>DistanceSensorController</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The expression &apos;adc_reading &gt; 0&apos; is always false." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/Objects/ADC/src/ADC_API_ESP32.cpp" line="64" column="25"/>
            <location file="/home/nikolaj/github/Embedded/library/Components/Objects/ADC/src/ADC_API_ESP32.cpp" line="56" column="25" info="&apos;adc_reading&apos; is assigned value &apos;0&apos; here."/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;val_type&apos; is assigned a value that is never used." verbose="Variable &apos;val_type&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/nikolaj/github/Embedded/library/Components/Objects/ADC/src/ADC_API_ESP32.cpp" line="44" column="31"/>
            <symbol>val_type</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;DataBroker::pushQueues&apos;" verbose="Unused private function: &apos;DataBroker::pushQueues&apos;" cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/DataBroker/src/DataBroker.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/DataBroker/include/DataBroker.hpp" line="67" column="16"/>
            <symbol>DataBroker::pushQueues</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;GPIO_API&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;GPIO_API&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/src/GPIO_API.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/include/GPIO_API.hpp" line="81" column="2"/>
            <symbol>GPIO_API</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_HAL&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_HAL&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/src/GPIO_API.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/include/HAL.hpp" line="127" column="2"/>
            <symbol>friend_HAL</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_GPIO_API&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_GPIO_API&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/src/GPIO_API.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/include/GPIO_API.hpp" line="133" column="2"/>
            <symbol>friend_GPIO_API</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_HAL&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_HAL&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/src/HAL.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/Gpio/include/HAL.hpp" line="127" column="2"/>
            <symbol>friend_HAL</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;err&apos; is assigned a value that is never used." verbose="Variable &apos;err&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/nikolaj/github/Embedded/library/Components/Objects/OTA/src/OTA.cpp" line="111" column="16"/>
            <symbol>err</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;HAL_ESP32::calculateDutyCycleBasedOnResolution&apos;" verbose="Unused private function: &apos;HAL_ESP32::calculateDutyCycleBasedOnResolution&apos;" cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/src/HAL.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/HAL.hpp" line="115" column="11"/>
            <symbol>HAL_ESP32::calculateDutyCycleBasedOnResolution</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/src/HAL.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/HAL.hpp" line="102" column="2"/>
            <symbol>HAL_ESP32</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/src/PWM_API_ESP32.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/HAL.hpp" line="102" column="2"/>
            <symbol>HAL_ESP32</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_PWM_API&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_PWM_API&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/src/PWM_API_ESP32.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/PWM_API_ESP32.hpp" line="108" column="2"/>
            <symbol>friend_PWM_API</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;QueryDataMessage&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;QueryDataMessage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/src/QueryAddExternalResources.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/include/QueryMessage.hpp" line="80" column="2"/>
            <symbol>QueryDataMessage</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;QueryURIMessage&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;QueryURIMessage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/src/QueryAddExternalResources.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/include/QueryMessage.hpp" line="98" column="2"/>
            <symbol>QueryURIMessage</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_QueryAddExternalResources&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_QueryAddExternalResources&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/src/QueryAddExternalResources.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/include/QueryAddExternalResources.hpp" line="104" column="2"/>
            <symbol>friend_QueryAddExternalResources</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;QueryDataMessage&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;QueryDataMessage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/src/QueryAddSensorData.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/include/QueryMessage.hpp" line="80" column="2"/>
            <symbol>QueryDataMessage</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;QueryURIMessage&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;QueryURIMessage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/src/QueryAddSensorData.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/include/QueryMessage.hpp" line="98" column="2"/>
            <symbol>QueryURIMessage</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_QueryAddData&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_QueryAddData&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/src/QueryAddSensorData.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/QueryTools/include/QueryAddSensorData.hpp" line="80" column="2"/>
            <symbol>friend_QueryAddData</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Watch_Clock&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Watch_Clock&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Objects/Watchdog/src/Watch_Clock.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/Watchdog/include/Watch_Clock.hpp" line="79" column="2"/>
            <symbol>Watch_Clock</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Curl_SAL::m_curl&apos; is not initialized in the constructor." verbose="Member variable &apos;Curl_SAL::m_curl&apos; is not initialized in the constructor." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/Protocols/HTTP/src/Curl_SAL.cpp" line="41" column="11"/>
            <symbol>Curl_SAL::m_curl</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;mqtt_api_v2::handle_event&apos;" verbose="Unused private function: &apos;mqtt_api_v2::handle_event&apos;" cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Protocols/MQTT/src/mqtt_api_v2.cpp" file="/home/nikolaj/github/Embedded/library/Components/Protocols/MQTT/include/mqtt_api_v2.hpp" line="113" column="23"/>
            <symbol>mqtt_api_v2::handle_event</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;mqtt_api_v2::disconnect&apos;" verbose="Unused private function: &apos;mqtt_api_v2::disconnect&apos;" cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/Protocols/MQTT/src/mqtt_api_v2.cpp" file="/home/nikolaj/github/Embedded/library/Components/Protocols/MQTT/include/mqtt_api_v2.hpp" line="117" column="16"/>
            <symbol>mqtt_api_v2::disconnect</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_handle&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_handle&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/RTOS/FreeRTOS/src/FreeRTOS.cpp" line="318" column="2"/>
            <symbol>m_handle</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_handle&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_handle&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/RTOS/FreeRTOS/src/Task.cpp" line="23" column="2"/>
            <symbol>m_handle</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_coreId&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_coreId&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="/home/nikolaj/github/Embedded/library/Components/RTOS/FreeRTOS/src/Task.cpp" line="24" column="2"/>
            <symbol>m_coreId</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HAL_ESP32&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/User/DogFeederDoor/src/DogFeederDoor.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/HAL.hpp" line="102" column="2"/>
            <symbol>HAL_ESP32</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;MG996R&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;MG996R&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/User/DogFeederDoor/src/DogFeederDoor.cpp" file="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/include/MG996R.hpp" line="107" column="2"/>
            <symbol>MG996R</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_PWM_API&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_PWM_API&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/User/DogFeederDoor/src/DogFeederDoor.cpp" file="/home/nikolaj/github/Embedded/library/Components/Objects/PWM/include/PWM_API_ESP32.hpp" line="108" column="2"/>
            <symbol>friend_PWM_API</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;friend_MG996R&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;friend_MG996R&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/nikolaj/github/Embedded/library/Components/User/DogFeederDoor/src/DogFeederDoor.cpp" file="/home/nikolaj/github/Embedded/library/Components/Actuator/ServoMotor/include/MG996R.hpp" line="149" column="2"/>
            <symbol>friend_MG996R</symbol>
        </error>
    </errors>
</results>
